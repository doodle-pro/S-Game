{
  "address": "0xa2e325c991527940eCFCd35a24cE14387759F9c7",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_entryFee",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "matchId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "UserEntered",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "matchId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "UserLost",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "matchId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "UserWon",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "BetOn",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "TotalAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "WinningAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "betHistory",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "matchId",
          "type": "uint256"
        },
        {
          "internalType": "enum Bet.BetResult",
          "name": "result",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "amountWon",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountBet",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "matchId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "Bet_On",
          "type": "uint256"
        }
      ],
      "name": "enter",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "entryFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "gamblersToAmountBet",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "getBetHistory",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "matchIds",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "results",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "amountsWon",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "amountBet",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "timestamps",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getEntryFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "getTotalDeposited",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "hasEntered",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "matchGamblers",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "matchWinner",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "matchId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "win",
          "type": "uint256"
        }
      ],
      "name": "setWinner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "matchId",
          "type": "uint256"
        }
      ],
      "name": "settleTeamResultLoss",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "matchId",
          "type": "uint256"
        }
      ],
      "name": "settleTeamResultWon",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "transactionHash": "0x1a9c787a6baf830155d8dd8d90888106521fe36883311d425f521b901e5908b5",
  "receipt": {
    "to": null,
    "from": "0xcD4F7dC3d2593A1B6Db0608a164e5979Ab30d5b3",
    "contractAddress": "0xa2e325c991527940eCFCd35a24cE14387759F9c7",
    "transactionIndex": 0,
    "gasUsed": "1970289",
    "logsBloom": "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    "blockHash": "0xc79f70f70c011cd62dadd801fc41de62ec917407aaaea0675a08d319c6cd0cac",
    "transactionHash": "0x1a9c787a6baf830155d8dd8d90888106521fe36883311d425f521b901e5908b5",
    "logs": [],
    "blockNumber": 24759707,
    "cumulativeGasUsed": "1970289",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "1000000000000000000"
  ],
  "numDeployments": 2,
  "solcInputHash": "afc20da1502241aa5bfa33196dfe33ae",
  "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_entryFee\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"matchId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"UserEntered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"matchId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"UserLost\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"matchId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"UserWon\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"BetOn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"TotalAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"WinningAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"betHistory\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"matchId\",\"type\":\"uint256\"},{\"internalType\":\"enum Bet.BetResult\",\"name\":\"result\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"amountWon\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBet\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"matchId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Bet_On\",\"type\":\"uint256\"}],\"name\":\"enter\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"entryFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"gamblersToAmountBet\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getBetHistory\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"matchIds\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"results\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amountsWon\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amountBet\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"timestamps\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getEntryFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getTotalDeposited\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"hasEntered\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"matchGamblers\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"matchWinner\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"matchId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"win\",\"type\":\"uint256\"}],\"name\":\"setWinner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"matchId\",\"type\":\"uint256\"}],\"name\":\"settleTeamResultLoss\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"matchId\",\"type\":\"uint256\"}],\"name\":\"settleTeamResultWon\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"enter(uint256,uint256)\":{\"params\":{\"Bet_On\":\"The team or option the user is betting on.\",\"matchId\":\"The match identifier.\"}},\"getBetHistory(address)\":{\"params\":{\"user\":\"The user's address.\"},\"returns\":{\"amountBet\":\"Array of the bet amount for each match (if any).\",\"amountsWon\":\"Array of extra amounts won.\",\"matchIds\":\"Array of match identifiers.\",\"results\":\"Array of results (0 for Loss, 1 for Win).\",\"timestamps\":\"Array of settlement timestamps.\"}},\"getTotalDeposited(address)\":{\"params\":{\"user\":\"The user's address.\"}},\"setWinner(uint256,uint256)\":{\"params\":{\"matchId\":\"The match identifier.\",\"win\":\"The winning team/option.\"}},\"settleTeamResultLoss(uint256)\":{\"params\":{\"matchId\":\"The match identifier.\"}},\"settleTeamResultWon(uint256)\":{\"params\":{\"matchId\":\"The match identifier.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"enter(uint256,uint256)\":{\"notice\":\"Allows a user to enter a bet for a specific match (matchId should be 1, 2, 3, 4, or 5).\"},\"getBetHistory(address)\":{\"notice\":\"Retrieves a user's bet history.\"},\"getTotalDeposited(address)\":{\"notice\":\"Returns the overall deposited amount for a given user (across all matches).\"},\"setWinner(uint256,uint256)\":{\"notice\":\"Allows the owner to set the winning team for a specific match.\"},\"settleTeamResultLoss(uint256)\":{\"notice\":\"Settles a lost bet for a given match.         This function can only be called if the user bet on the losing team.\"},\"settleTeamResultWon(uint256)\":{\"notice\":\"Settles a winning bet for a given match.         This function can only be called if the user bet on the winning team.\"},\"withdraw()\":{\"notice\":\"Allows the owner to withdraw the entire contract balance.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Bet.sol\":\"Bet\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Bet.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ncontract Bet {\\n    address private immutable owner;\\n    uint256 public immutable entryFee;\\n    \\n    // For each match (id 1-5), store the winning team/option (set by the owner)\\n    mapping(uint256 => uint256) public matchWinner;\\n    \\n    // For each user and match, track if the user has entered that match\\n    mapping(address => mapping(uint256 => bool)) public hasEntered;\\n    \\n    // For each user and match, track the amount bet\\n    mapping(address => mapping(uint256 => uint256)) public gamblersToAmountBet;\\n    \\n    // For each user and match, track the team (or option) they bet on\\n    mapping(address => mapping(uint256 => uint256)) public BetOn;\\n    \\n    // Overall total deposited amount per user (cumulative)\\n    mapping(address => uint256) public TotalAmount;\\n    \\n    // For each match, maintain an array of addresses that have placed a bet\\n    mapping(uint256 => address[]) public matchGamblers;\\n    \\n    // (Optional) Mapping for winning amounts (if you wish to track them separately)\\n    mapping(address => uint256) public WinningAmount;\\n    \\n    event UserEntered(address user, uint256 matchId, uint256 amount);\\n    event UserWon(address user, uint256 matchId, uint256 amount);\\n    event UserLost(address user, uint256 matchId, uint256 amount);\\n\\n    // New definitions for bet history\\u2014each record now holds the match id instead of a game id.\\n    enum BetResult { Loss, Win }\\n\\n    struct BetRecord {\\n        uint256 matchId;\\n        BetResult result;\\n        uint256 amountWon;\\n        uint256 amountBet; // Extra amount earned (if any) for a win\\n        uint256 timestamp;\\n    }\\n\\n    mapping(address => BetRecord[]) public betHistory;\\n\\n    constructor(uint256 _entryFee) {\\n        owner = msg.sender;\\n        entryFee = _entryFee;\\n    }\\n\\n    modifier onlyOwner() {\\n        require(msg.sender == owner, \\\"Only the owner can call this function\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @notice Allows a user to enter a bet for a specific match (matchId should be 1, 2, 3, 4, or 5).\\n     * @param matchId The match identifier.\\n     * @param Bet_On The team or option the user is betting on.\\n     */\\n    function enter(uint256 matchId, uint256 Bet_On) public payable {\\n        require(msg.value >= (entryFee / 10 ** 18), \\\"Insufficient entry fee\\\");\\n        require(!hasEntered[msg.sender][matchId], \\\"You have already entered this match\\\");\\n        gamblersToAmountBet[msg.sender][matchId] = msg.value;\\n        BetOn[msg.sender][matchId] = Bet_On;\\n        matchGamblers[matchId].push(msg.sender);\\n        hasEntered[msg.sender][matchId] = true;\\n        emit UserEntered(msg.sender, matchId, msg.value);\\n        TotalAmount[msg.sender] += msg.value;\\n    }\\n\\n    /**\\n     * @notice Settles a winning bet for a given match.\\n     *         This function can only be called if the user bet on the winning team.\\n     * @param matchId The match identifier.\\n     */\\n    function settleTeamResultWon(uint256 matchId) public payable {\\n        require(hasEntered[msg.sender][matchId], \\\"User has not entered this match\\\");\\n        require(BetOn[msg.sender][matchId] == matchWinner[matchId], \\\"You did not bet on the winning team\\\");\\n\\n        uint256 losingPool = 0;\\n        uint256 winnersCount = 0;\\n        address[] memory gamblers = matchGamblers[matchId];\\n        uint256 totalWinnerBet = 0;\\n        // Calculate the total bet from users who lost and count winners\\n        for (uint256 i = 0; i < gamblers.length; i++) {\\n            if (BetOn[gamblers[i]][matchId] == matchWinner[matchId]) {\\n                 totalWinnerBet=gamblersToAmountBet[gamblers[i]][matchId];\\n                winnersCount++;\\n            } else {\\n                losingPool += gamblersToAmountBet[gamblers[i]][matchId];\\n            }\\n        }\\n        require(winnersCount > 0, \\\"No winners found\\\");\\n\\n        // Distribute the losing pool equally among winners\\n         uint256 userBet = gamblersToAmountBet[msg.sender][matchId];\\n        uint256 additionalWinnings = (losingPool * userBet) / totalWinnerBet;\\n        uint256 totalWinnings = gamblersToAmountBet[msg.sender][matchId] + additionalWinnings;\\n        // Transfer the extra winnings (the original bet remains in the contract)\\n        payable(msg.sender).transfer(totalWinnings);\\n\\n        // Mark the user's bet as settled for this match\\n        hasEntered[msg.sender][matchId] = false;\\n\\n        // Record the winning bet details in the user's bet history\\n        betHistory[msg.sender].push(\\n            BetRecord({\\n                matchId: matchId,\\n                result: BetResult.Win,\\n                amountWon: additionalWinnings,\\n                amountBet:userBet,\\n                timestamp: block.timestamp\\n            })\\n        );\\n        \\n        emit UserWon(msg.sender, matchId, totalWinnings);\\n    }\\n\\n    /**\\n     * @notice Settles a lost bet for a given match.\\n     *         This function can only be called if the user bet on the losing team.\\n     * @param matchId The match identifier.\\n     */\\n    function settleTeamResultLoss(uint256 matchId) public {\\n        require(hasEntered[msg.sender][matchId], \\\"User has not entered this match\\\");\\n        require(BetOn[msg.sender][matchId] != matchWinner[matchId], \\\"Your team won; cannot settle as loss\\\");\\n        \\n        // Mark the user's bet as settled for this match\\n        hasEntered[msg.sender][matchId] = false;\\n\\n        // Record the lost bet details in the user's bet history\\n        betHistory[msg.sender].push(\\n            BetRecord({\\n                matchId: matchId,\\n                result: BetResult.Loss,\\n                amountBet:gamblersToAmountBet[msg.sender][matchId],\\n                amountWon: 0,\\n                timestamp: block.timestamp\\n            })\\n        );\\n        \\n        emit UserLost(msg.sender, matchId, entryFee);\\n    }\\n\\n    /**\\n     * @notice Allows the owner to withdraw the entire contract balance.\\n     */\\n    function withdraw() public payable onlyOwner {\\n        payable(owner).transfer(address(this).balance);\\n    }\\n\\n    function getOwner() public view returns (address) {\\n        return owner;\\n    }\\n\\n    function getEntryFee() public view returns (uint256) {\\n        return entryFee;\\n    }\\n\\n    /**\\n     * @notice Returns the overall deposited amount for a given user (across all matches).\\n     * @param user The user's address.\\n     */\\n    function getTotalDeposited(address user) public view returns (uint256) {\\n        return TotalAmount[user];\\n    }\\n\\n    function getBalance() public view returns (uint256) {\\n        return address(this).balance;\\n    }\\n\\n    /**\\n     * @notice Allows the owner to set the winning team for a specific match.\\n     * @param matchId The match identifier.\\n     * @param win The winning team/option.\\n     */\\n    function setWinner(uint256 matchId, uint256 win) public onlyOwner {\\n        matchWinner[matchId] = win;\\n    }\\n\\n    /**\\n     * @notice Retrieves a user's bet history.\\n     * @param user The user's address.\\n     * @return matchIds Array of match identifiers.\\n     * @return results Array of results (0 for Loss, 1 for Win).\\n     * @return amountsWon Array of extra amounts won.\\n     * @return amountBet Array of the bet amount for each match (if any).\\n     * @return timestamps Array of settlement timestamps.\\n     */\\n    function getBetHistory(address user)\\n        public\\n        view\\n        returns (\\n            uint256[] memory matchIds,\\n            uint256[] memory results,\\n            uint256[] memory amountsWon,\\n            uint256[] memory amountBet,\\n            uint256[] memory timestamps\\n        )\\n    {\\n        uint256 len = betHistory[user].length;\\n        matchIds = new uint256[](len);\\n        results = new uint256[](len);\\n        amountsWon = new uint256[](len);\\n        amountBet = new uint256[](len);\\n        timestamps = new uint256[](len);\\n\\n        for (uint256 i = 0; i < len; i++) {\\n            BetRecord memory record = betHistory[user][i];\\n            matchIds[i] = record.matchId;\\n            results[i] = uint256(record.result);\\n            amountsWon[i] = record.amountWon;\\n            amountBet[i]=record.amountBet;\\n            timestamps[i] = record.timestamp;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9ae54d6b064e3469e38f5f594590d34393db9c858ee211e8c9c0b19ac7c91355\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "enter(uint256,uint256)": {
        "params": {
          "Bet_On": "The team or option the user is betting on.",
          "matchId": "The match identifier."
        }
      },
      "getBetHistory(address)": {
        "params": {
          "user": "The user's address."
        },
        "returns": {
          "amountBet": "Array of the bet amount for each match (if any).",
          "amountsWon": "Array of extra amounts won.",
          "matchIds": "Array of match identifiers.",
          "results": "Array of results (0 for Loss, 1 for Win).",
          "timestamps": "Array of settlement timestamps."
        }
      },
      "getTotalDeposited(address)": {
        "params": {
          "user": "The user's address."
        }
      },
      "setWinner(uint256,uint256)": {
        "params": {
          "matchId": "The match identifier.",
          "win": "The winning team/option."
        }
      },
      "settleTeamResultLoss(uint256)": {
        "params": {
          "matchId": "The match identifier."
        }
      },
      "settleTeamResultWon(uint256)": {
        "params": {
          "matchId": "The match identifier."
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "enter(uint256,uint256)": {
        "notice": "Allows a user to enter a bet for a specific match (matchId should be 1, 2, 3, 4, or 5)."
      },
      "getBetHistory(address)": {
        "notice": "Retrieves a user's bet history."
      },
      "getTotalDeposited(address)": {
        "notice": "Returns the overall deposited amount for a given user (across all matches)."
      },
      "setWinner(uint256,uint256)": {
        "notice": "Allows the owner to set the winning team for a specific match."
      },
      "settleTeamResultLoss(uint256)": {
        "notice": "Settles a lost bet for a given match.         This function can only be called if the user bet on the losing team."
      },
      "settleTeamResultWon(uint256)": {
        "notice": "Settles a winning bet for a given match.         This function can only be called if the user bet on the winning team."
      },
      "withdraw()": {
        "notice": "Allows the owner to withdraw the entire contract balance."
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 7101,
        "contract": "contracts/Bet.sol:Bet",
        "label": "matchWinner",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_uint256,t_uint256)"
      },
      {
        "astId": 7107,
        "contract": "contracts/Bet.sol:Bet",
        "label": "hasEntered",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))"
      },
      {
        "astId": 7113,
        "contract": "contracts/Bet.sol:Bet",
        "label": "gamblersToAmountBet",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))"
      },
      {
        "astId": 7119,
        "contract": "contracts/Bet.sol:Bet",
        "label": "BetOn",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))"
      },
      {
        "astId": 7123,
        "contract": "contracts/Bet.sol:Bet",
        "label": "TotalAmount",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 7128,
        "contract": "contracts/Bet.sol:Bet",
        "label": "matchGamblers",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)"
      },
      {
        "astId": 7132,
        "contract": "contracts/Bet.sol:Bet",
        "label": "WinningAmount",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 7177,
        "contract": "contracts/Bet.sol:Bet",
        "label": "betHistory",
        "offset": 0,
        "slot": "7",
        "type": "t_mapping(t_address,t_array(t_struct(BetRecord)7171_storage)dyn_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_array(t_struct(BetRecord)7171_storage)dyn_storage": {
        "base": "t_struct(BetRecord)7171_storage",
        "encoding": "dynamic_array",
        "label": "struct Bet.BetRecord[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_enum(BetResult)7159": {
        "encoding": "inplace",
        "label": "enum Bet.BetResult",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_array(t_struct(BetRecord)7171_storage)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct Bet.BetRecord[])",
        "numberOfBytes": "32",
        "value": "t_array(t_struct(BetRecord)7171_storage)dyn_storage"
      },
      "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(uint256 => bool))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint256,t_bool)"
      },
      "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(uint256 => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint256,t_uint256)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => address[])",
        "numberOfBytes": "32",
        "value": "t_array(t_address)dyn_storage"
      },
      "t_mapping(t_uint256,t_bool)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_uint256,t_uint256)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_struct(BetRecord)7171_storage": {
        "encoding": "inplace",
        "label": "struct Bet.BetRecord",
        "members": [
          {
            "astId": 7161,
            "contract": "contracts/Bet.sol:Bet",
            "label": "matchId",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 7164,
            "contract": "contracts/Bet.sol:Bet",
            "label": "result",
            "offset": 0,
            "slot": "1",
            "type": "t_enum(BetResult)7159"
          },
          {
            "astId": 7166,
            "contract": "contracts/Bet.sol:Bet",
            "label": "amountWon",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 7168,
            "contract": "contracts/Bet.sol:Bet",
            "label": "amountBet",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 7170,
            "contract": "contracts/Bet.sol:Bet",
            "label": "timestamp",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "160"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}